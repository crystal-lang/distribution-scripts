name: CI

on: [push, pull_request]

env:
  PREVIOUS_CRYSTAL_VERSION: 1.6.0
  CRYSTAL_VERSION: 1.6.2
  PACKAGE_VERSION: 1

jobs:
  linux-build:
    # TODO: set architecture based off matrix value when ARM runner available
    name: Build linux binaries
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        architecture:
          - x86_64
          - aarch64
    steps:
      -
        name: Checkout the distribution scripts
        uses: actions/checkout@v3

      -
        name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      -
        name: Build the linux binaries
        run: |
          cd linux
          make \
            arch=${{ matrix.architecture }} \
            CRYSTAL_VERSION=${{ env.CRYSTAL_VERSION }} \
            PACKAGE_VERSION=${{ env.PACKAGE_VERSION }} \
            PREVIOUS_CRYSTAL_VERSION=${{ env.PREVIOUS_CRYSTAL_VERSION }}

      -
        name: Upload the binaries for use in the next step
        uses: actions/upload-artifact@v3
        with:
          name: linux-${{ env.CRYSTAL_VERSION }}-{{ matrix.architecture }}-${{ env.PACKAGE_VERSION }}
          path: linux/build/*.gz


  docker-build:
    name: Build and test the docker images
    runs-on: ubuntu-latest
    needs: linux-build
    strategy:
      fail-fast: false
      matrix:
        architecture:
          - x86_64
          - aarch64
    steps:
      -
        name: Checkout the distribution scripts
        uses: actions/checkout@v3

      -
        name: Download the linux binaries
        uses: actions/download-artifact@v3
        with:
          name: linux-${{ env.CRYSTAL_VERSION }}-{{ matrix.architecture }}-${{ env.PACKAGE_VERSION }}
          path: docker/build-context

      -
        name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      -
        name: Build the docker image
        run: |
          cd docker
          make \
            arch=${{ matrix.architecture }} \
            CRYSTAL_VERSION=${{ env.CRYSTAL_VERSION }} \
            PACKAGE_VERSION=${{ env.PACKAGE_VERSION }} \

      -
        name: Ensure images are well formed
        run: |
          # NOTE: Hack for GHA
          sudo mkdir -p /var/lib/docker/tmp

          cd docker
          make test \
            arch=${{ matrix.architecture }} \
            CRYSTAL_VERSION=${{ env.CRYSTAL_VERSION }} \
            PACKAGE_VERSION=${{ env.PACKAGE_VERSION }}

      -
        name: Upload the docker images
        uses: actions/upload-artifact@v3
        with:
          name: docker-crystal-${{ env.CRYSTAL_VERSION }}-${{ env.PACKAGE_VERSION }}-{{ matrix.architecture }}
          path: docker/build/*.gz
